(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{613:function(n,a,r){"use strict";r.r(a);var t=r(17),e=Object(t.a)({},(function(){var n=this,a=n.$createElement,r=n._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h1",{attrs:{id:"第七题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第七题"}},[n._v("#")]),n._v(" 第七题")]),n._v(" "),r("p",[n._v("var ary = [0,1,2];\nary[10] = 10;\nary.filter(function(x) {\nreturn x === undefined;\n});")]),n._v(" "),r("p",[n._v("//  []")]),n._v(" "),r("p",[n._v("// var ary = [0,1,2];\n// ary[10] = 10;\n// [0, 1, 2, 'empty x 7', 10]   // empty 为空， 意为数组中没有被赋的值\n//  filter 中的callback 只会再赋值的索引上被调用  所以 中间的7个empty无法被调用  直接跨过到达第十一个 10\n//  在判断都没有符合条件的filter则会返回一个空数组 []")]),n._v(" "),r("p",[n._v("// # 语法\n// var newArray = arr.filter(callback(element[, index[, array]])[, thisArg])")]),n._v(" "),r("p",[n._v("// callback\n// 用来测试数组的每个元素的函数。返回 true 表示该元素通过测试，保留该元素，false 则不保留。它接受以下三个参数：\n// element\n// 数组中当前正在处理的元素。\n// index可选\n// 正在处理的元素在数组中的索引。\n// array可选\n// 调用了 filter 的数组本身。\n// thisArg可选\n// 执行 callback 时，用于 this 的值。\n// 返回值\n// 一个新的、由通过测试的元素组成的数组，如果没有任何数组元素通过测试，则返回空数组。\n// 描述\n// filter 为数组中的每个元素调用一次 callback 函数，并利用所有使得 callback 返回 true 或等价于 true 的值的元素创建一个新数组。\n// callback 只会在已经赋值的索引上被调用，对于那些已经被删除或者从未被赋值的索引不会被调用。\n// 那些没有通过 callback 测试的元素会被跳过，不会被包含在新数组中。")])])}),[],!1,null,null,null);a.default=e.exports}}]);